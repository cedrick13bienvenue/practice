version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: blog_postgres
    environment:
      POSTGRES_DB: blog_db
      POSTGRES_USER: blog_user
      POSTGRES_PASSWORD: blog_password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - blog_network

  # Redis (for future message queuing)
  redis:
    image: redis:7-alpine
    container_name: blog_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - blog_network

  # Blog Backend API
  api:
    build: .
    container_name: blog_api
    ports:
      - "5500:5500"
    environment:
      - NODE_ENV=development
      - PORT=5500
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=blog_db
      - DB_USER=blog_user
      - DB_PASSWORD=blog_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - postgres
      - redis
    networks:
      - blog_network
    volumes:
      - .:/app
      - /app/node_modules
      - ./uploads:/app/uploads
    command: ["npm", "run", "dev"]
    restart: unless-stopped

  # Email Worker (for future implementation)
  email-worker:
    build: .
    container_name: blog_email_worker
    command: ["npm", "run", "worker:email"]
    environment:
      - NODE_ENV=production
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=blog_db
      - DB_USER=blog_user
      - DB_PASSWORD=blog_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - postgres
      - redis
    networks:
      - blog_network
    restart: unless-stopped
    profiles:
      - worker

volumes:
  postgres_data:
  redis_data:

networks:
  blog_network:
    driver: bridge
